@use "../../assets/styles/base/mixins" as mix;
@use "../../assets/styles/base/reset";

%border-patterns {
	border-radius: 4px;
	content: "";
	height: calc(100% + 4px);
	left: -2px;
	position: absolute;
	top: -2px;
	width: calc(100% + 4px);
	z-index: -2;
}

body {
	background-color: #001;
	flex-wrap: wrap;
	height: 100vh;
	@include mix.flex-center();
	line-height: 1.7em;
	transition: all 3ms linear;
	width: 100vw;
}

h1 {
	color: #fff;
	margin: 30px;
	text-align: center;
	width: 100%;
}

input[type="checkbox"] {
	visibility: hidden;
}

.checker:checked + label,
.checker:not(:checked) + label {
	background-color: #353746;
	border-radius: 4px;
	color: #fff;
	cursor: pointer;
	font-size: 1em;
	@include mix.flex-center();
	line-height: 30px;
	margin: 0 6px 16px;
	padding: 6px 25px;
	position: relative;
	text-align: center;
	text-transform: uppercase;

	&::before {
		background-image: linear-gradient(136deg, red, yellow);
		@extend %border-patterns;
	}

	&::after {
		background-color: #353746;
		@extend %border-patterns;
	}

	& .text {
		display: inline-block;
		font-weight: bold;
		margin-left: 20px;
		position: relative;
		transition: opacity 300ms linear;

		&::after {
			background-image: linear-gradient(138deg, red, yellow);
			content: "";
			height: 2px;
			left: 0;
			margin-top: -1px;
			position: absolute;
			top: 50%;
			transition: all 300ms linear;
			width: 0;
			z-index: 1;
		}
	}
}

.checker:not(:checked) + label::before {
	height: calc(100% + 2px);
	left: -1px;
	top: -1px;
	width: calc(100% + 2px);
}

.checker:checked + label::after {
	opacity: 0;
}

i {
	font-size: calc(1vw + 1vh + 0.5vmin);
}

.checker:checked + label .text {
	opacity: 0.6;

	&::after {
		width: 100%;
	}
}
